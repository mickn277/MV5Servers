# --------------------------------------------------------------------------------
# Purpose:
#
# Requirements:
# 
# History:
#
# --------------------------------------------------------------------------------

# -*- mode: ruby -*-
# vi: set ft=ruby :

# --------------------------------------------------------------------------------
# Declares
# --------------------------------------------------------------------------------

# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = "2"

NAME = "Vagrant-Postgres-Timescale"
HOSTNAME = "pgtimescale"

# Define tests to determine if we are provisioned and or provisioning 
def provisioned?(provider='virtualbox')
    File.exists?(File.join(File.dirname(__FILE__),".vagrant/machines/#{NAME}/#{provider}/action_provision"))
end
def provisioning?()
  (ARGV.include?("reload") && ARGV.include?("--provision")) || ARGV.include?("provision")
end

# --------------------------------------------------------------------------------
# Prerequisites
# --------------------------------------------------------------------------------

# Vagrant prerequisites
unless Vagrant.has_plugin?("vagrant-reload")
  puts 'Installing vagrant-reload Plugin...'
  system('vagrant plugin install vagrant-reload')
end
unless Vagrant.has_plugin?("vagrant-proxyconf")
  puts 'Installing vagrant-proxyconf Plugin...'
  system('vagrant plugin install vagrant-proxyconf')
end
unless Vagrant.has_plugin?("vagrant-vbguest")
  puts 'Installing vagrant-proxyconf Plugin...'
  system('vagrant plugin install vagrant-vbguest')
end

# --------------------------------------------------------------------------------
# Provision:
# --------------------------------------------------------------------------------

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  #BugFix: "centos/7" does't have GuestAdditions installed, requires "vagrant plugin install vagrant-vbguest"
  config.vm.box = "centos/7"
  config.vm.define NAME
  config.vm.hostname = HOSTNAME # SecFix: hostname different to vm name

  config.vm.box_check_update = false

  # Must specify :id "ssh" so it's recognised as the vagrant ssh port
  config.vm.network :forwarded_port, guest: 22, host: 2225, id: "ssh"

  # Internal network for interserver comms
  config.vm.network "private_network", ip: "192.168.0.5", virtualbox__intnet: true

  # Database port forwarding
  config.vm.network "forwarded_port", guest: 5432, host: 5432, id: "postgres"

  config.vm.provider :virtualbox do |vb, override|
      vb.name = NAME
      vb.memory = 3072
      vb.cpus = 4
      # Prevent VirtualBox from interfering with host audio stack
      vb.customize ["modifyvm", :id, "--audio", "none"]
      override.vm.box_download_checksum_type = "sha256"
      override.vm.box_download_checksum = "b24c912b136d2aa9b7b94fc2689b2001c8d04280cf25983123e45b6a52693fb3"
      override.vm.box_url = "https://cloud.centos.org/centos/7/vagrant/x86_64/images/CentOS-7-x86_64-Vagrant-1803_01.VirtualBox.box"
  end
  
  # Proxy configuration from host env - optional
  if Vagrant.has_plugin?("vagrant-proxyconf")
    puts "getting Proxy Configuration from Host..."
    if ENV["http_proxy"]
      puts "http_proxy found, adding on guest"
      config.proxy.http = ENV["http_proxy"]
    end
    if ENV["https_proxy"]
      puts "https_proxy found, adding on guest"
      config.proxy.https = ENV["https_proxy"]
    end
    if ENV["no_proxy"]
      config.proxy.no_proxy = ENV["no_proxy"]
    end
  end
  
  # SecFix: After provision, mount purposeful folders, rather than whole vagrant folder

  # backups out
  config.vm.synced_folder "guest-backups/", "/backups"

  # data in/out
  config.vm.synced_folder "guest-data/", "/data"
  
  # scripts in
  config.vm.synced_folder "guest-scripts/", "/scripts"

  # ----------------------------------------
  # Provision (Initial boot only)
  # ----------------------------------------

  config.vm.provision :shell, path: "provision-scripts/config-region.sh"

  config.vm.provision :shell, path: "provision-scripts/linux-utils.sh"

  config.vm.provision "shell", path: "provision-scripts/install-postgres.sh"

  # SecFix: Don't map the root of vagrant when provisioned, the path leads to the private keys etc.
  if provisioned?
    config.vm.synced_folder ".", "/vagrant", disabled: true
  end
end