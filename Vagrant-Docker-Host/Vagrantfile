# --------------------------------------------------------------------------------
# Purpose:
#
# Requirements:
# 
# History:
#
# --------------------------------------------------------------------------------

# -*- mode: ruby -*-
# vi: set ft=ruby :

# --------------------------------------------------------------------------------
# Declares
# --------------------------------------------------------------------------------

# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = "2"

# Name in Vagrant & VirtualBox
NAME = "Vagrant-Docker-Host"
HOSTNAME = "dockerhost"

#Define tests to determine if we are provisioned and or provisioning 
def provisioned?(provider='virtualbox')
  File.exists?(File.join(File.dirname(__FILE__),".vagrant/machines/#{NAME}/#{provider}/action_provision"))
end
def provisioning?()
  (ARGV.include?("reload") && ARGV.include?("--provision")) || ARGV.include?("provision")
end

# --------------------------------------------------------------------------------
# Prerequisites
# --------------------------------------------------------------------------------

# Vagrant prerequisites
unless Vagrant.has_plugin?("vagrant-reload")
  puts 'Installing vagrant-reload Plugin...'
  system('vagrant plugin install vagrant-reload')
end
unless Vagrant.has_plugin?("vagrant-proxyconf")
  puts 'Installing vagrant-proxyconf Plugin...'
  system('vagrant plugin install vagrant-proxyconf')
end
unless Vagrant.has_plugin?("vagrant-vbguest")
  puts 'Installing vagrant-proxyconf Plugin...'
  system('vagrant plugin install vagrant-vbguest')
end

# --------------------------------------------------------------------------------
# Main
# --------------------------------------------------------------------------------

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  #BugFix: "centos/7" does't have GuestAdditions installed, requires "vagrant plugin install vagrant-vbguest"
  config.vm.box = "centos/7"
  config.vm.define NAME
  config.vm.hostname = HOSTNAME # SecFix: hostname different to vm name

  config.vm.box_check_update = false

    # Must specify :id "ssh" so it's recognised as the vagrant ssh port
  config.vm.network :forwarded_port, guest: 22, host: 2223, id: "ssh"

  # Internal network for interserver comms
  config.vm.network "private_network", ip: "192.168.0.3/24", virtualbox__intnet: true #type: "dhcp", 

  config.vm.provider "virtualbox" do |vb|
    vb.memory = 4096
    vb.cpus = 4
    # BugFix: Name required here also
    vb.name = NAME
    # Prevent VirtualBox from interfering with host audio stack
    vb.customize ["modifyvm", :id, "--audio", "none"]
    # USB, Serial disabled by default
  end
  
  # Proxy configuration from host env - optional
  if Vagrant.has_plugin?("vagrant-proxyconf")
    puts "getting Proxy Configuration from Host..."
    if ENV["http_proxy"]
      puts "http_proxy: " + ENV["http_proxy"]
      config.proxy.http     = ENV["http_proxy"]
    end
    if ENV["https_proxy"]
      puts "https_proxy: " + ENV["https_proxy"]
      config.proxy.https    = ENV["https_proxy"]
    end
    if ENV["no_proxy"]
      config.proxy.no_proxy = ENV["no_proxy"]
    end
  end

  # SecFix: Mount scripts instead of whole vagrant folder
  config.vm.synced_folder "guest-scripts/", "/scripts"
  
  # Mount backups folder for file transfers in/out
  config.vm.synced_folder "backups/", "/backups"
  
  # ----------------------------------------
  # Provision (Initial boot only)
  # ----------------------------------------
  
  config.vm.provision :shell, path: "provision-scripts/config-region.sh"

  config.vm.provision :shell, path: "provision-scripts/linux-utils.sh"

  config.vm.provision :shell, path: "provision-scripts/install-docker.sh"

  config.vm.provision :shell, path: "provision-scripts/enable-user-namespaces.sh"

  # SecFix: Don't map the root of vagrant when provisioned, the path leads to the private keys etc.
  if provisioned?
    config.vm.synced_folder ".", "/vagrant", disabled: true
  end
end
